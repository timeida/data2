#include <SPI.h>

#include <Wire.h>

#include <Adafruit_GFX.h>

#include <Adafruit_SSD1306.h>



#define OLED_MOSI 9

#define OLED_CLK 10

#define OLED_DC 11

#define OLED_CS 12

#define OLED_RESET 13

Adafruit_SSD1306 display(128, 64, OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);



#define CAMEO16_GLCD_HEIGHT 64

#define CAMEO16_GLCD_WIDTH 128

#define CAMEO17_GLCD_HEIGHT 64

#define CAMEO17_GLCD_WIDTH 128

#define CAMEO18_GLCD_HEIGHT 64

#define CAMEO18_GLCD_WIDTH 128

#define CAMEO19_GLCD_HEIGHT 64

#define CAMEO19_GLCD_WIDTH 128



char texts;



const unsigned char PROGMEM booting_logo2[] = {

// '1f3130673fb9d0493772d7b490a8b37094784b75e1bac94d726fa1dc649ad169', 128x64px

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x03, 0xc0, 0x03, 0xc0, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x0f, 0x00, 0x00, 0xf0, 0x07, 0xff, 0xe0, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x20, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x08, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x08, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0xfe, 0x00, 0x00, 0x3f, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x03, 0xff, 0xf1, 0xff, 0x00, 0x00, 0x7f, 0xcf, 0xff, 0xc0, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x83, 0xff, 0x3f, 0xfc, 0x1f, 0xfe, 0xff, 0xc1, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x03, 0xc0, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0x03, 0xc0, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0xff, 0xfe, 0x3f, 0xff, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x1e, 0x7c, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0x40, 0x7f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x02, 0x40, 0x02, 0x00, 0x04, 0x40, 0x02, 0xd0, 0x00, 0x80, 0x06, 0x40, 0x00, 0x00, 

0x00, 0x00, 0x02, 0x80, 0x02, 0x00, 0x04, 0x40, 0x03, 0x30, 0x00, 0x80, 0x05, 0xc0, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x80, 0x04, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};



void setup() {



  Serial.begin(9600);



  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);

  display.clearDisplay();



  display.drawBitmap(0, 0, booting_logo2, 128, 64, 1);

  display.display();

  delay(1000);

}



void loop() {

  

   reticle1();

  

}



void reticle1(){



  int sensorValue = analogRead(A0);

  float Vcc = sensorValue * (5.0 / 1023.0);

  

  display.clearDisplay();



  display.drawLine(62, 34, 62, 50, WHITE);

  display.drawLine(63, 32, 63, 50, WHITE);

  display.drawLine(64, 34, 64, 50, WHITE);



  display.drawLine(56, 27, 1, 27, WHITE);

  display.drawLine(58, 28, 1, 28, WHITE);

  display.drawLine(56, 29, 1, 29, WHITE);



  display.drawLine(70, 27, 126, 27, WHITE);

  display.drawLine(68, 28, 126, 28, WHITE);

  display.drawLine(70, 29, 126, 29, WHITE);



  display.drawLine(0, 0, 0, 2, WHITE);

  display.drawLine(0, 0, 2, 0, WHITE);



  display.drawLine(0, 63, 0, 61, WHITE);

  display.drawLine(0, 63, 2, 63, WHITE);

  

  display.drawLine(127, 0, 127, 2, WHITE);

  display.drawLine(127, 0, 125, 0, WHITE);

  

  display.drawLine(127, 63, 125, 63, WHITE);

  display.drawLine(127, 63, 127, 61, WHITE);

  

  display.setTextSize(1);

  display.setTextColor(WHITE);

  display.setCursor(10, 50);



  display.setCursor(50, 0);

  String texts2 = "Vcc = ";

  texts2.concat(Vcc);

  display.println(texts2);

  display.display();

}



void reticle2(){



  display.clearDisplay();

  

  display.drawLine(62, 34, 62, 50, WHITE);

  display.drawLine(63, 32, 63, 50, WHITE);

  display.drawLine(64, 34, 64, 50, WHITE);

  display.display();

}



void reticle3(){



  display.clearDisplay();

  

  display.drawLine(62, 32, 65, 35, WHITE);

  display.drawLine(62, 33, 65, 36, WHITE);

  display.drawLine(62, 32, 59, 35, WHITE);

  display.drawLine(62, 33, 59, 36, WHITE);



  display.display();

}

//cross

void reticle4(){

  

  display.clearDisplay();

  

  display.drawLine(64, 24, 64, 29, WHITE);

  display.drawLine(67, 32, 72, 32, WHITE);

  display.drawLine(64, 35, 64, 40, WHITE);

  display.drawLine(61, 32, 56, 32, WHITE);

  display.display();

}



//point_cross

void reticle5(){

  

  display.clearDisplay();

  

  display.drawPixel(64, 32, WHITE);

  display.drawLine(64, 24, 64, 29, WHITE);

  display.drawLine(67, 32, 72, 32, WHITE);

  display.drawLine(64, 35, 64, 40, WHITE);

  display.drawLine(61, 32, 56, 32, WHITE);

  display.display();

}



void reticle6(){

  

  display.clearDisplay();

  

  display.drawCircle(64, 32, 5, WHITE);

  display.drawPixel(64, 32, WHITE);

  display.display();

}



//EOTech reticle_1

void reticle7(){



  display.clearDisplay();

  

  display.drawCircle(64, 32, 5, WHITE);

  display.drawPixel(64, 32, WHITE);

  display.drawLine(64, 38, 64, 39, WHITE);

  display.drawLine(64, 26, 64, 25, WHITE);

  display.drawLine(70, 32, 71, 32, WHITE);

  display.drawLine(58, 32, 57, 32, WHITE);

  display.display();

}



//EOTech reticle_2

void reticle8(){



  display.clearDisplay();

  

  display.drawCircle(64, 32, 5, WHITE);

  display.drawPixel(64, 32, WHITE);

  display.drawPixel(64, 34, WHITE);

  display.drawLine(64, 38, 64, 39, WHITE);

  display.drawLine(64, 26, 64, 25, WHITE);

  display.drawLine(70, 32, 71, 32, WHITE);

  display.drawLine(58, 32, 57, 32, WHITE);

  display.display();

}



//okp-7 reticle_1

void reticle9(){



  display.clearDisplay();

  

  display.drawLine(62, 32, 65, 35, WHITE);

  display.drawLine(62, 33, 65, 36, WHITE);

  display.drawLine(62, 32, 59, 35, WHITE);

  display.drawLine(62, 33, 59, 36, WHITE);

  display.drawLine(70, 34, 76, 34, WHITE);

  display.drawLine(54, 34, 48, 34, WHITE);

  display.drawLine(62, 38, 62, 40, WHITE);

  display.display();

}





//okp-7 reticle_2

void reticle10(){



  display.clearDisplay();

  

  display.drawCircle(64, 32, 6, WHITE);

  display.drawCircle(64, 32, 2, WHITE);

  display.drawPixel(64, 32, WHITE);

  display.display();

}
